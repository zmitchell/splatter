[package]
name = "splatter"
version = "0.1.0"
authors = ["mitchmindtree <mitchell.nordine@gmail.com>"]
description = "A Creative Coding Framework for Rust."
readme = "README.md"
keywords = ["creative", "sketch", "graphics", "audio"]
license = "MIT"
repository = "https://github.com/splatter-org/splatter.git"
homepage = "https://github.com/splatter-org/splatter"
edition = "2018"

[dependencies]
futures = "0.3"
find_folder = "0.3"
getrandom = "0.2.10"
image = "0.23"
instant = "0.1.12"
lyon = "1.0"
splatter_core = { version = "0.1.0", path = "../splatter_core", features = [
    "std",
    "serde",
] }
splatter_mesh = { version = "0.1.0", path = "../splatter_mesh", features = [
    "serde1",
] }
splatter_wgpu = { version = "0.1.0", path = "../splatter_wgpu", features = [
    "capturer",
] }
noise = "0.8"
notosans = { version = "0.1", optional = true }
num_cpus = "1"
pennereq = "0.3"
rusttype = { version = "0.8", features = ["gpu_cache"] }
serde = "1"
serde_derive = "1"
serde_json = "1"
toml = "0.8"
walkdir = "2"
web-sys = { version = "0.3.69", optional = true }
wgpu_upstream = { version = "0.17.1", package = "wgpu" }
winit = { version = "0.29", features = ["rwh_05"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1", features = ["full"] }
[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1", features = ["rt"] }

[features]
default = ["notosans"]
# Enables SPIR-V support in the `wgpu` module.
spirv = ["splatter_wgpu/spirv"]
# Enables experimental WASM compilation for CI-use only
wasm-experimental = [
    "getrandom/js",
    "web-sys",
    "wgpu_upstream/webgl",
    "wgpu_upstream/fragile-send-sync-non-atomic-wasm",
]
